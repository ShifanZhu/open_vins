/**


@page update-delay Delayed Initialization

Here we describe the method of variable initialization which utilizes the initialization methodology presented
in Mingyang Li's thesis, Visual-Inertial Odometry on Resource-Constrained Systems:
https://escholarship.org/content/qt4nn0j264/qt4nn0j264.pdf


@section System Projection

Consider the current state, \f$\mathbf{x}\f$, as well as a new variable we want to initialize, \f$\mathbf{f}\f$.
To do this, we collect a series a measurements involving both our state and the new variable:

\f{align*}{
    \mathbf{z}_i = \mathbf{h}_i\left(\mathbf{x}, \mathbf{f}\right) + \mathbf{n}_i
\f}

In general, we collect more measurements than the degrees of freedom of the new variable (for example, all the bearing
measurements corresponding to a new feature over an interval).
Stacking these measurements, we define a single large measurement:


\f{align*}{
    \mathbf{z} = \begin{bmatrix} \mathbf{z}_1 \\
    \mathbf{z}_2 \\
    \vdots \\
    \mathbf{z}_m
    \end{bmatrix}  = \mathbf{h}\left(\mathbf{x}, \mathbf{f}\right)+ \mathbf{n}
\f}

We then perform the standard linearization with respect to the current state and new variable:

\f{align*}{
    \mathbf{r} = \mathbf{z}-\mathbf{h}(\hat{\mathbf{x}}, \hat{f}) = \mathbf{H}_x \tilde{\mathbf{x}} +\mathbf{H}_f
    \tilde{\mathbf{f}} + \mathbf{n}
\f}

Similar to the nullspace projection, we now perform Givens rotations to zero-out rows in \f$\mathbf{H}_f\f$ with indices
larger than the dimension of \f$\tilde{\mathbf{f}}\f$. Note that we assume the noise is istropic (if it is not, we can always
use whitening to make it isotropic). In addition, the Givens rotations must also be applied to \f$\mathbf{H}_x\f$ and \f$\mathbf{r}\f$.
This leaves us with the following set of equations:


\f{align*}{
    \begin{bmatrix} \mathbf{r}_1 \\ \mathbf{r}_2 \end{bmatrix} = \begin{bmatrix} \mathbf{H}_{x1} \\ \mathbf{H}_{x2} \end{bmatrix}
    \tilde{\mathbf{x}} +\begin{bmatrix} \mathbf{H}_{f1} \\ \mathbf{0} \end{bmatrix}
    \tilde{\mathbf{f}} + \begin{bmatrix} \mathbf{n}_1 \\ \mathbf{n}_2 \end{bmatrix}
\f}

Note that the bottom system is exactly the nullspace projection, and that \f$\mathbf{H}_{f1}\f$ is invertible. In addition if
the covariance of the system noise is \f$\mathbf{R} = \sigma^2\mathbf{I}_m\f$ and the
dimension of \f$\tilde{\mathbf{f}}\f$ is k, then the covariance of the subsystem
noises are \f$\mathbf{R}_1 = \sigma^2\mathbf{I}_k\f$, \f$\mathbf{R}_2 = \sigma^2\mathbf{I}_{m-k}\f$

@section Initializing

Consider that the new measurement Jacobian is invertible, we can directly solve for the error on the new variable using
the first subsystem:


\f{align*}{
    \tilde{\mathbf{f}} = \mathbf{H}_{f1}^{-1}\left(\mathbf{r}_1-\mathbf{n}_1-\mathbf{H}_x\tilde{\mathbf{x}}\right)
\f}

We can then compute the update due to this measurement:

\f{align*}{
    \mathbb{E}[\tilde{\mathbf{f}}] = \mathbf{H}_{f1}^{-1}(\mathbf{r}_1)
\f}

Note that this is equivalent to a Gauss Newton step of the MLE formed by fixing the estimate of \f$\mathbf{x}\f$ and optimizing
over the value of \f$\hat{\mathbf{f}}\f$, and should
therefore should be zero if we used such an optimization to come up with our initial estimate for the new variable. If not, this
correction can be used to update the new variable.

We now can formulate the covariance of our error:

\f{align*}{
    \mathbf{P}_{ff}  &= \mathbb{E}\left[\left(\tilde{\mathbf{f}}-\mathbb{E}\left(\tilde{\mathbf{f}}\right)\right)
    \left(\tilde{\mathbf{f}}-\mathbb{E}\left(\tilde{\mathbf{f}}\right)\right)^{\top}\right] \\
    &= \mathbb{E}\left[\left(\mathbf{H}_{f1}^{-1}\left(-\mathbf{n}_1-\mathbf{H}_{x1}\tilde{\mathbf{x}}\right)\right)
    \left(\mathbf{H}_{f1}^{-1}\left(-\mathbf{n}_1-\mathbf{H}_{x1}\tilde{\mathbf{x}}\right)\right)^{\top}\right] \\
    &= \mathbf{H}_{f1}^{-1}\left(\mathbf{H}_{x1}\mathbf{P}_{xx}\mathbf{H}_{x1}^{\top} + \mathbf{R}_1\right)\mathbf{H}_{f1}^{-\top}
\f}

whereas the cross terms for the covariance can be computed as:

\f{align*}{
    \mathbf{P}_{xf}  &= \mathbb{E}\left[\left(\tilde{\mathbf{x}}\right)
    \left(\tilde{\mathbf{f}}-\mathbb{E}\left(\tilde{\mathbf{f}}\right)\right)^{\top}\right] \\
    &= \mathbb{E}\left[\left(\tilde{\mathbf{x}}\right)
           \left(\mathbf{H}_{f1}^{-1}\left(-\mathbf{n}_1-\mathbf{H}_{x1}\tilde{\mathbf{x}}\right)\right)^{\top}\right] \\
    &= -\mathbf{P}_{xx}\mathbf{H}_{x1}^{\top}\mathbf{H}_{f1}^{-\top}
\f}

These entries can then be placed in the correct location for the covariance. For example when initializing a new variable
to the end of the state, the augmented covariance would be:

\f{align*}{
    \mathbf{P}' = \begin{bmatrix} \mathbf{P}_{xx} & \mathbf{P}_{xf} \\
    \mathbf{P}_{xf}^{\top} & \mathbf{P}_{ff} \end{bmatrix}
\f}

Note that this process does not update the estimate for \f$\mathbf{x}\f$. In addition, after initializing, we can then use the second system
to update our new state through a standard EKF update.

*/